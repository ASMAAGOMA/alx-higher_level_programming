# 0-add_integer.txt


===========================

How to Use 0-add_integer.py

===========================


This module defines an integer addition function ``add_integer(a, b=98)``.


Usage

=====


``add_integer(...)` returns the addition of its two arguments. For numbers,

that value is equivalent to using the ``+`` operator.


::


    >>> add_integer = import('0-add_integer').add_integer

    >>> add_integer(2, 3)

    5


::


    >>> add_integer(2, -3)

    -1


Note that floats are casted to ints before addition is performed.


::


    >>> add_integer(2.9, 0.2)

    2


::


    >>> add_integer(-2.9, -0.2)

    -2


Floating and none_floating values are compiled


::


    >>> add_integer(2.3, -3)

    -1


The second argument is optional by default is 98


::


    >>> add_integer(2)

    100


Non-Numbers

===========


``add_integer()`` expects that both arguments are either integers or floats.

If either argument is a non-integer and non-float, a TypeError is raised:


::


    >>> add_integer("hello", 3)

    Traceback (most recent call last):

    TypeError: a must be an integer


::


    >>> add_integer(2, "hello")

    Traceback (most recent call last):

    TypeError: b must be an integer


::


    >>> add_integer(None)

    Traceback (most recent call last):

    TypeError: a must be an integer


::


    >>> add_integer(2.3, None)

    Traceback (most recent call last):

    TypeError: b must be an integer
